/*
 * @license Proprietary
 * @copyright Copyright (c) 2017 borkedLabs - All Rights Reserved
 */

var siggy2 = siggy2 || {};

siggy2.VulnerabilityTable = function(ele, changeCallback)
{
	this.ele = $(ele);

	var $this = this;

	this.dayHeaders = [
		'M',
		'T',
		'W',
		'T',
		'F',
		'S',
		'S'
	];

	this.buildTable();

	this.locked = false;

	this.isMouseDown = false;
	this.isSelected = false;
	this.changeCallback = changeCallback;
	this.mouseDownDay = 0;
	this.ele.on('mousedown', '.vuln-cell', function(e){
		if($this.locked)
		{
			return false;
		}

		$this.isMouseDown = true;
		$(this).toggleClass('vuln-cell-selected');
		$this.isSelected = $(this).hasClass("vuln-cell-selected");
		$this.mouseDownDay = $(this).data('day');

		if($this.changeCallback != null)
		{
			$this.changeCallback();
		}

		return false;
	});
	
	this.ele.on('mouseover', '.vuln-cell', function(e){
		if($this.locked)
		{
			return false;
		}

		if ($this.isMouseDown) {
			if($(this).data('day') == $this.mouseDownDay)
			{
				$(this).toggleClass("vuln-cell-selected", $this.isSelected);
				if($this.changeCallback != null)
				{
					$this.changeCallback();
				}
			}
		}
	});
	
	$(document).on('mouseup.vuln-table-'+this.ele.attr('id'), function(e){
		$this.isMouseDown = false;
	});
}

siggy2.VulnerabilityTable.prototype.unlock = function()
{
	this.locked = false;
}

siggy2.VulnerabilityTable.prototype.lock = function()
{
	this.locked = true;
}

siggy2.VulnerabilityTable.prototype.destroy = function()
{
	$(document).off('mouseup.vuln-table-'+this.ele.attr('id'));
}

siggy2.VulnerabilityTable.prototype.buildTable = function()
{
	var row = $('<tr>');
	row.append( $('<th>') );	//empty col header for time column
	for(day = 0; day < 7; day++)
	{
		var col = $('<th>').text( this.dayHeaders[day] );
		row.append(col);
	}

	this.ele.append(row);

	for(hour = 0; hour < 24; hour++)
	{
		var row = $('<tr>');

		row.append( $('<td>').addClass('vuln-time-cell').text(hour.lpadZero(2) + ":00") );

		for(day = 0; day < 7; day++)
		{
			var className = 'vuln-cell-'+day+"-"+hour;
			var col = $('<td>')
							.text('')
							.addClass('vuln-cell')
							.addClass(className)
							.data('hour', hour)
							.data('day', day);

			row.append(col);
		}

		this.ele.append(row);
	}
}

siggy2.VulnerabilityTable.prototype.export = function()
{
	var output = [];
	this.ele.find('.vuln-cell-selected').each(function() {
		output.push({day: $(this).data('day'), hour: $(this).data('hour')});
	});

	return output;
}

siggy2.VulnerabilityTable.prototype.import = function(data)
{
	if(typeof(data) === "undefined")
	{
		return;
	}

	this.ele.find('.vuln-cell').removeClass('vuln-cell-selected');

	for(var i in data)
	{
		var dayhour = data[i];

		var className = '.vuln-cell-'+dayhour.day+"-"+dayhour.hour;

		this.ele.find(className).each(function(index, element){
			$(element).addClass('vuln-cell-selected');
		});
	}
}

siggy2.VulnerabilityTable.prototype.addFromTimer = function(days, hours, minutes, seconds)
{
	var projectedDate = moment.utc();

	projectedDate.add({days:days, hours: hours, minutes: minutes, seconds: seconds});

	//0 is Sunday in moment.js, we want 0 to be Monday
	var projectedDay = projectedDate.day();
	if(projectedDay == 0)
	{
		projectedDay = 6;
	}
	else
	{
		projectedDay -= 1;
	}
	
	var className = '.vuln-cell-'+projectedDay+"-"+projectedDate.hour();
	this.ele.find(className).addClass('vuln-cell-selected');
	

	this.unlock();
}