/*
 * @license Proprietary
 * @copyright Copyright (c) 2017 borkedLabs - All Rights Reserved
 */

import $ from 'jquery';
import * as moment from 'moment';


export default class VulnerabilityTable
{
	private readonly dayHeaders = [
		'M',
		'T',
		'W',
		'T',
		'F',
		'S',
		'S'
	];

	private ele = null;
	private locked: boolean = false;
	private isMouseDown: boolean = false;
	private isSelected: boolean = false;

	private changeCallback = null;
	private mouseDownDay: number = 0;

	constructor(ele, changeCallback) {
		this.ele = $(ele);
	
		var $this = this;
	
	
		this.buildTable();
	
		this.changeCallback = changeCallback;
		this.ele.on('mousedown', '.vuln-cell', function(e){
			if($this.locked)
			{
				return false;
			}
	
			$this.isMouseDown = true;
			$(this).toggleClass('vuln-cell-selected');
			$this.isSelected = $(this).hasClass("vuln-cell-selected");
			$this.mouseDownDay = $(this).data('day');
	
			if($this.changeCallback != null)
			{
				$this.changeCallback();
			}
	
			return false;
		});
		
		this.ele.on('mouseover', '.vuln-cell', function(e){
			if($this.locked)
			{
				return false;
			}
	
			if ($this.isMouseDown) {
				if($(this).data('day') == $this.mouseDownDay)
				{
					$(this).toggleClass("vuln-cell-selected", $this.isSelected);
					if($this.changeCallback != null)
					{
						$this.changeCallback();
					}
				}
			}
		});
		
		$(document).on('mouseup.vuln-table-'+this.ele.attr('id'), function(e){
			$this.isMouseDown = false;
		});
	}

	public unlock()
	{
		this.locked = false;
	}

	public lock()
	{
		this.locked = true;
	}

	public destroy()
	{
		$(document).off('mouseup.vuln-table-'+this.ele.attr('id'));
	}

	public buildTable()
	{
		var row = $('<tr>');
		row.append( $('<th>') );	//empty col header for time column
		for(let day = 0; day < 7; day++)
		{
			var col = $('<th>').text( this.dayHeaders[day] );
			row.append(col);
		}

		this.ele.append(row);

		for(let hour = 0; hour < 24; hour++)
		{
			var row = $('<tr>');

			row.append( $('<td>').addClass('vuln-time-cell').text(hour.lpadZero(2) + ":00") );

			for(let day = 0; day < 7; day++)
			{
				var className = 'vuln-cell-'+day+"-"+hour;
				var col = $('<td>')
								.text('')
								.addClass('vuln-cell')
								.addClass(className)
								.data('hour', hour)
								.data('day', day);

				row.append(col);
			}

			this.ele.append(row);
		}
	}

	public export()
	{
		var output = [];
		this.ele.find('.vuln-cell-selected').each(function() {
			output.push({day: $(this).data('day'), hour: $(this).data('hour')});
		});

		return output;
	}

	public import(data)
	{
		if(typeof(data) === "undefined")
		{
			return;
		}

		this.ele.find('.vuln-cell').removeClass('vuln-cell-selected');

		for(var i in data)
		{
			var dayhour = data[i];

			var className = '.vuln-cell-'+dayhour.day+"-"+dayhour.hour;

			this.ele.find(className).each(function(index, element){
				$(element).addClass('vuln-cell-selected');
			});
		}
	}

	public addFromTimer(days, hours, minutes, seconds)
	{
		var projectedDate = moment.utc();

		projectedDate.add({days:days, hours: hours, minutes: minutes, seconds: seconds});

		//0 is Sunday in moment.js, we want 0 to be Monday
		var projectedDay = projectedDate.day();
		if(projectedDay == 0)
		{
			projectedDay = 6;
		}
		else
		{
			projectedDay -= 1;
		}
		
		var className = '.vuln-cell-'+projectedDay+"-"+projectedDate.hour();
		this.ele.find(className).addClass('vuln-cell-selected');
		

		this.unlock();
	}
}