/**
 * @license Proprietary
 * @copyright Copyright (c) 2014 borkedLabs - All Rights Reserved
 */

import $ from 'jquery';
import * as Handlebars from '../vendor/handlebars';
import { Dialogs } from '../Dialogs';
import VulnerabilityTable from '../VulnerabilityTable';
import validate from 'validate.js';
import Helpers from '../Helpers';

export default class StructureVulnerability {

	private table = null;
	
	private readonly defaultAdderData = {
		model: {
			days: 0,
			hours: 0,
			minutes: 0,
			seconds: 0
		}
	};
	
	private readonly adderFormConstraints = {
		days: {
			presence: true,
			numericality: true
		},
		hours: {
			presence: true,
			numericality: true
		},
		minutes: {
			presence: true,
			numericality: true
		},
		seconds: {
			presence: true,
			numericality: true
		},
	};

	private core;
	private structure;
	private templateDialog;
	private templateAdder;
	private dlg;

	constructor(core, structure) {
		this.templateDialog = Handlebars.compile( $("#template-dialog-structure-vulnerability").html() );
		this.templateAdder = Handlebars.compile( $("#template-dialog-structure-vulnerability-form").html() );
		this.core = core;
		this.structure = structure;
		
		var $this = this;

		var content = $this.templateDialog($this.structure);
		this.dlg = Dialogs.dialog({
								title: "Structure Vulnerability",
								content: content,
								id: "dialog-structure-vulnerability-"+this.structure.id,
								buttons:{
									save: {
										text: "Save Changes",
										style: 'primary',
										disabled: true,
										callback: function(dialog) {
											$this.saveChanges();
											
											dialog.hide();
											$this.destroy();
										}
									},
									close: {
										text: "Close",
										style: 'danger',
										callback: function(dialog) {
											dialog.hide();
											$this.destroy();
										}
									},
								}
							});
		
		
		this.table = new VulnerabilityTable( this.dlg.ele.find('.vuln-table'), function(){	
			$this.dlg.enableButton('save');
		});
		this.table.import(this.structure.vulnerabilities);
		

		this.dlg.ele.find('.vuln-adder').html(this.templateAdder(this.defaultAdderData));
		this.dlg.ele.find('.vuln-adder').on('submit','form',function(ev){
			ev.stopPropagation();
			ev.preventDefault();
			
			$this.handleAdderSubmit();
			return false;
		});
	}

	public show()
	{
		this.dlg.show();
	}

	public handleAdderSubmit()
	{
		var formData = $('#vulnerability-adder-'+this.structure.id+' form').serializeObject();

		var errors = validate(formData, this.adderFormConstraints);

		var data = {
			model: formData,
			errors: errors
		};
		
		if(Helpers.isDefined(errors))
		{
			$('#vulnerability-adder-'+this.structure.id).html(this.templateAdder(data));
			return;
		}
		
		this.dlg.enableButton('save');
		this.table.addFromTimer(parseInt(formData.days), parseInt(formData.hours), parseInt(formData.minutes), parseInt(formData.seconds));
	}

	public saveChanges()
	{
		var data = {
			id: this.structure.id,
			vulnerabilities: this.table.export()
		};

		$.post(this.core.settings.baseUrl + 'structure/vulnerabilities', JSON.stringify(data))
			.done(function(respData) {
				$(document).trigger('siggy.updateRequested', true );
			})
			.fail(function(jqXHR) {
				if(jqXHR.status >= 500)
				{			
					Dialogs.alertServerError("saving the vulnerability timers");
				}
			});
	}


	public destroy()
	{
		this.table.destroy();
	}
}
