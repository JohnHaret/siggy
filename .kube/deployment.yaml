apiVersion: v1
kind: Service
metadata:
  name: siggy
  labels:
    app: siggy
    tier: frontend
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: siggy
    tier: frontend
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: siggy
spec:
  selector:
    matchLabels:
      app: siggy
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: siggy
        tier: frontend
    spec:
      containers:
      - name: siggy
        image: mroszko/siggy:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - { name: "APP_ENV", value: "production" }
        - { name: "APP_DEBUG", value: "false" }
        - { name: "APP_KEY", valueFrom: { secretKeyRef: { name: siggy-secrets, key: app.key }} }
        - { name: "APP_TIMEZONE", value: "UTC" }
        - { name: "HASH_ID_SECRET", valueFrom: { secretKeyRef: { name: siggy-secrets, key: hash.id.secret }} }
        - name: SERVER_TYPE
          value: php
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: siggy-nginx
  labels:
    app: siggy-nginx
    tier: frontend
spec:
  # comment or delete the following line if you want to use a LoadBalancer
  type: LoadBalancer 
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 93
    targetPort: 80
  selector:
    app: siggy-nginx
    tier: frontend
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: siggy-nginx
spec:
  selector:
    matchLabels:
      app: siggy-nginx
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: siggy-nginx
        tier: frontend
    spec:
      containers:
      - name: siggy-nginx
        image: mroszko/siggy:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: SERVER_TYPE
          value: nginx
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 80
        - containerPort: 9000
